{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e24f441d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" \r\n        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" \r\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-info\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"UpperCase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLowClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const[text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className =\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} \r\n        onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"5\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n        Convert To UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>\r\n        Convert To LowerCase</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length} minutes time take to read the text</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//This happens because all the JSX will be converted to javascript Calls.","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const[mode, setMode] = useState(\"light\");\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      },1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light')\n    {\n      \n      setMode('dark')\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else\n    {\n      \n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <TextForm heading=\"Enter the text to analyse\" mode={mode}/>\n      {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n            \n            </Route>\n      </Switch> */}\n      </div>\n    {/* </Router> */}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}